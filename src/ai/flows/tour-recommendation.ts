// This is an autogenerated file from Firebase Studio.
'use server';

/**
 * @fileOverview A tour recommendation AI agent.
 *
 * - tourRecommendation - A function that handles the tour recommendation process.
 * - TourRecommendationInput - The input type for the tourRecommendation function.
 * - TourRecommendationOutput - The return type for the tourRecommendation function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const TourRecommendationInputSchema = z.object({
  image: z
    .string()
    .optional()
    .describe(
      "A photo of the user's ideal safari, as a data URI that must include a MIME type and use Base64 encoding. Expected format: 'data:<mimetype>;base64,<encoded_data>'."
    ),
  description: z.string().optional().describe('The description of the user ideal safari.'),
});
export type TourRecommendationInput = z.infer<typeof TourRecommendationInputSchema>;

const TourRecommendationOutputSchema = z.object({
  tourPackages: z
    .array(z.string())
    .describe('The recommended tour packages based on the image and description.'),
});
export type TourRecommendationOutput = z.infer<typeof TourRecommendationOutputSchema>;

export async function tourRecommendation(input: TourRecommendationInput): Promise<TourRecommendationOutput> {
  return tourRecommendationFlow(input);
}

const prompt = ai.definePrompt({
  name: 'tourRecommendationPrompt',
  input: {schema: TourRecommendationInputSchema},
  output: {schema: TourRecommendationOutputSchema},
  prompt: `You are a safari tour expert specializing in recommending tour packages to users.

You will use the following information to recommend tour packages to the user.

Description: {{{description}}}
{{#if image}}
Photo: {{media url=image}}
{{/if}}

Recommend tour packages to the user based on the image and description.
`,
});

const tourRecommendationFlow = ai.defineFlow(
  {
    name: 'tourRecommendationFlow',
    inputSchema: TourRecommendationInputSchema,
    outputSchema: TourRecommendationOutputSchema,
  },
  async input => {
    const {output} = await prompt(input);
    return output!;
  }
);
